#include <bits/stdc++.h>

using namespace std;
int dp[1005][1005];
string str1,str2;
int lcs()
{
    memset(dp,0,sizeof(dp));
    for(int i=1; i<=str1.length(); ++i)
        for(int j=1; j<=str2.length(); ++j)
        {
            if(str1[i-1]==str2[j-1])
                dp[i][j]=dp[i-1][j]+1;
            else
                dp[i][j]=max(dp[i-1][j],dp[i][j-1]);
        }
    return dp[str1.length()][str2.length()];
}
int main()
{
    while(scanf("%s%s",str1,str2)!=EOF)
        cout<<lcs()<<endl;
    return 0;
}
/*#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;
const int N = 1000;
char a[N],b[N];
int dp[N][N];
int main()
{
    int lena,lenb,i,j;
    while(scanf("%s%s",a,b)!=EOF)
    {
        memset(dp,0,sizeof(dp));
        lena=strlen(a);
        lenb=strlen(b);
        for(i=1;i<=lena;i++)
        {
            for(j=1;j<=lenb;j++)
            {
                if(a[i-1]==b[j-1])
                {
                    dp[i][j]=dp[i-1][j-1]+1;
                }
                else
                {
                    dp[i][j]=max(dp[i-1][j],dp[i][j-1]);
                }
            }
        }
        printf("%d\n",dp[lena][lenb]);
    }
    return 0;
}
*/
